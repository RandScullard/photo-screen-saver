.root
{
   position: absolute;
   width: 100vw;
   height: 100vh;
   cursor: none;


   // -------------------------------------------------------------------------------------------------
   // Snow (Pure CSS)
   // Copyright (c) 2021 by alphardex (https://codepen.io/alphardex/pen/dyPorwJ)

   // Permission is hereby granted, free of charge, to any person obtaining a copy of this software
   // and associated documentation files (the "Software"), to deal in the Software without
   // restriction, including without limitation the rights to use, copy, modify, merge, publish,
   // distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
   // Software is furnished to do so, subject to the following conditions:

   // The above copyright notice and this permission notice shall be included in all copies or
   // substantial portions of the Software.

   // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
   // BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
   // NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
   // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

   background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
   overflow: hidden;
   filter: drop-shadow(0 0 10px white);

   @function random_range($min, $max) {
      $rand: random();
      $random_range: $min + floor($rand * (($max - $min) + 1));
      @return $random_range;
   }

   .snow {
      $total: 200;
      position: absolute;
      width: 10px;
      height: 10px;
      background: white;
      border-radius: 50%;

      @for $i from 1 through $total {
         $random-x: random(1000000) * 0.0001vw;
         $random-offset: random_range(-100000, 100000) * 0.0001vw;
         $random-x-end: $random-x + $random-offset;
         $random-x-end-yoyo: $random-x + ($random-offset / 2);
         $random-yoyo-time: random_range(30000, 80000) / 100000;
         $random-yoyo-y: $random-yoyo-time * 100vh;
         $random-scale: random(10000) * 0.0001;
         $fall-duration: random_range(10, 30) * 1s;
         $fall-delay: random(30) * -1s;

         &:nth-child(#{$i}) {
            opacity: random(10000) * 0.0001;
            transform: translate($random-x, -10px) scale($random-scale);
            animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
         }

         @keyframes fall-#{$i} {
            #{percentage($random-yoyo-time)} {
               transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
            }

            to {
               transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
            }
         }
      }
   }

   // -------------------------------------------------------------------------------------------------
}
